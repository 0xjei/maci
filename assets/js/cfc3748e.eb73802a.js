"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7626],{9082:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=t(5250),s=t(720);const o={title:"Integrating MACI",description:"How to integrate MACI into your application",sidebar_label:"Integrating",sidebar_position:11},a="Integrating MACI",r={id:"integrating",title:"Integrating MACI",description:"How to integrate MACI into your application",source:"@site/versioned_docs/version-v1.x/integrating.md",sourceDirName:".",slug:"/integrating",permalink:"/docs/integrating",draft:!1,unlisted:!1,editUrl:"https://github.com/privacy-scaling-explorations/maci/edit/dev/website/versioned_docs/version-v1.x/integrating.md",tags:[],version:"v1.x",sidebarPosition:11,frontMatter:{title:"Integrating MACI",description:"How to integrate MACI into your application",sidebar_label:"Integrating",sidebar_position:11},sidebar:"version-1.x/mySidebar",previous:{title:"Testing in detail",permalink:"/docs/testing-in-detail"},next:{title:"Security Assessments",permalink:"/docs/audit"}},l={},c=[{value:"Deployment",id:"deployment",level:2},{value:"Signups and votes",id:"signups-and-votes",level:2},{value:"Poll finalization",id:"poll-finalization",level:2},{value:"MACI Contract",id:"maci-contract",level:2},{value:"InitialVoiceCreditProxy",id:"initialvoicecreditproxy",level:2},{value:"Subsidy",id:"subsidy",level:2},{value:"Poll Contract",id:"poll-contract",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"integrating-maci",children:"Integrating MACI"}),"\n",(0,i.jsxs)(n.p,{children:["MACI can be used in any protocol that requires collusion resistance, for instance it has been proven to be quite efficient when integrated in quadratic funding applications such as ",(0,i.jsx)(n.a,{href:"https://github.com/clrfund/monorepo",children:"clr.fund"})," and ",(0,i.jsx)(n.a,{href:"https://github.com/quadratic-funding/qfi/tree/feat/code-freeze",children:"qfi"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Here we will be looking at QFI and how it was used. Please note that this will be expanded as QFI is updated to use the newest version of MACI. Should you decide to integrate MACI in the meantime, feel free to open an issue on the GitHub repo."}),"\n",(0,i.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsxs)(n.p,{children:["First, you need to deploy contracts to start using MACI. This can be easily done via ",(0,i.jsx)(n.code,{children:"maci-cli"}),".\nDeployment order is:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Deploy crypto (Hasher, Poseidon)"}),"\n",(0,i.jsx)(n.li,{children:"Deploy VK Registry"}),"\n",(0,i.jsx)(n.li,{children:"Set verification keys"}),"\n",(0,i.jsx)(n.li,{children:"Deploy VoiceCreditProxy"}),"\n",(0,i.jsx)(n.li,{children:"Deploy Gatekeeper"}),"\n",(0,i.jsx)(n.li,{children:"Deploy Verifier"}),"\n",(0,i.jsx)(n.li,{children:"Deploy Topup credit"}),"\n",(0,i.jsx)(n.li,{children:"Deploy MessageProcessorFactory, PollFactory, SubsidyFactory, TallyFactory"}),"\n",(0,i.jsx)(n.li,{children:"Deploy MACI, AccQueueQuinaryMaci"}),"\n",(0,i.jsx)(n.li,{children:"Deploy Poll, AccQueueQuinaryMaci, MessageProcessor, Tally and Susbsidy (optional)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Before running the deploy command make sure you have ",(0,i.jsx)(n.a,{href:"https://maci.pse.dev/docs/trusted-setup",children:"zkey files"})," from trusted setup and env variables ",(0,i.jsx)(n.code,{children:"ETH_PROVIDER"})," (RPC endpoint) and ",(0,i.jsx)(n.code,{children:"ETH_SK"})," (wallet private key) are set. For production environment make sure you don't use zkey files from our examples."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"maci-cli deployVkRegistry\nmaci-cli setVerifyingKeys \\\n    --state-tree-depth 10 \\\n    --int-state-tree-depth 1 \\\n    --msg-tree-depth 2 \\\n    --vote-option-tree-depth 2 \\\n    --msg-batch-depth 1 \\\n    --process-messages-zkey ./zkeys/ProcessMessages_10-2-1-2_test/ProcessMessages_10-2-1-2_test.0.zkey \\\n    --tally-votes-zkey ./zkeys/TallyVotes_10-1-2_test/TallyVotes_10-1-2_test.0.zkey\nmaci-cli create --stateTreeDepth 10\nmaci-cli deployPoll \\\n    --pubkey coordinator-public-key \\\n    --duration 30 \\\n    --max-messages 25 \\\n    --max-vote-options 25 \\\n    --int-state-tree-depth 1 \\\n    --msg-tree-depth 2 \\\n    --msg-batch-depth 1 \\\n    --vote-option-tree-depth 2 \\\n    --subsidy-enabled false\n"})}),"\n",(0,i.jsx)(n.h2,{id:"signups-and-votes",children:"Signups and votes"}),"\n",(0,i.jsxs)(n.p,{children:["Next, you can start accept user signup and votes. This can be done via ",(0,i.jsx)(n.code,{children:"maci-cli"})," as well:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"maci-cli signup \\\n    --pubkey user-public-key\nmaci-cli publish \\\n    --pubkey user-public-key \\\n    --privkey user-private-key \\\n    --state-index 1 \\\n    --vote-option-index 0 \\\n    --new-vote-weight 9 \\\n    --nonce 1 \\\n    --poll-id 0\n"})}),"\n",(0,i.jsx)(n.h2,{id:"poll-finalization",children:"Poll finalization"}),"\n",(0,i.jsx)(n.p,{children:"As a coordinator, first you need to merge signups and messages (votes). Signups and messages are stored in a queue so when the poll in over, the coordinator needs to create the tree from the queue. This optimization is needed to reduce gas cost for voters. Then coordinator generates proofs for the message processing, tally and subsidy calculations. This allows to publish the poll results on-chain and then everyone can verify the results when the poll is over."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"maci-cli mergeSignups --poll-id 0\nmaci-cli mergeMessages --poll-id 0\nmaci-cli genProofs \\\n    --privkey coordinator-private-key \\\n    --poll-id 0 \\\n    --process-zkey ./zkeys/ProcessMessages_10-2-1-2_test/ProcessMessages_10-2-1-2_test.0.zkey \\\n    --tally-zkey ./zkeys/TallyVotes_10-1-2_test/TallyVotes_10-1-2_test.0.zkey \\\n    --tally-file tally.json \\\n    --output proofs/ \\\n    --tally-wasm ./zkeys/TallyVotes_10-1-2_test/TallyVotes_10-1-2_test_js/TallyVotes_10-1-2_test.wasm \\\n    --process-wasm ./zkeys/ProcessMessages_10-2-1-2_test/ProcessMessages_10-2-1-2_test_js/ProcessMessages_10-2-1-2_test.wasm \\\n    --wasm\nmaci-cli proveOnChain \\\n    --poll-id 0 \\\n    --proof-dir proofs/ \\\n    --subsidy-enabled false\nmaci-cli verify \\\n    --poll-id 0 \\\n    --subsidy-enabled false \\\n    --tally-file tally.json # this file is generated in genProofs\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When poll finishes, ",(0,i.jsx)(n.a,{href:"https://github.com/privacy-scaling-explorations/maci/blob/dev/contracts/contracts/Tally.sol",children:"Tally contract"})," emits the event with poll address so you can track the state changes."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"event BallotsTallied(address poll);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"maci-contract",children:"MACI Contract"}),"\n",(0,i.jsxs)(n.p,{children:["The MACI contract is the core of the protocol. Contracts can inherit from MACI and thus expose the signup and topup functions. As with standalone MACI, one would need to deploy a ",(0,i.jsx)(n.a,{href:"./contracts#signupgatekeeper",children:"sign up gatekeeper"})," as well as the ",(0,i.jsx)(n.a,{href:"./contracts#voicecreditproxy",children:"voice credit proxy"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"As an example, within the quadratic funding infrastructure project, the QFI contract inherits from MACI and allows sign up via the contribute function."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function contribute(\n    PubKey calldata pubKey,\n    uint256 amount\n    ) external {\n\n    [..snip]\n\n    uint256 voiceCredits = amount / voiceCreditFactor;\n    // The user is marked as registered here upon contribution\n    grantRoundToContributors[nextGrantRoundId][msg.sender] = ContributorStatus(voiceCredits, true);\n\n    // Increase the number of contributors for this round\n    grantRoundToContributorsCount[nextGrantRoundId]++;\n\n    bytes memory signUpGatekeeperAndInitialVoiceCreditProxyData = abi.encode(\n        msg.sender,\n        voiceCredits\n    );\n\n    signUp(\n        pubKey,\n        signUpGatekeeperAndInitialVoiceCreditProxyData,\n        signUpGatekeeperAndInitialVoiceCreditProxyData\n    );\n\n    [..snip]\n\n    emit ContributionSent(msg.sender, amount);\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"initialvoicecreditproxy",children:"InitialVoiceCreditProxy"}),"\n",(0,i.jsxs)(n.p,{children:["If you'd like to extend the functionality of how votes are distributed among users, you need to extend ",(0,i.jsx)(n.a,{href:"https://github.com/privacy-scaling-explorations/maci/blob/dev/contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol",children:"InitialVoiceCreditProxy"})," contract. You can see our ",(0,i.jsx)(n.a,{href:"https://github.com/privacy-scaling-explorations/maci/blob/dev/contracts/contracts/initialVoiceCreditProxy/ConstantInitialVoiceCreditProxy.sol",children:"basic example"})," how it's implemented for constant distribution."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport { InitialVoiceCreditProxy } from \"./InitialVoiceCreditProxy.sol\";\n\n/// @title ConstantInitialVoiceCreditProxy\n/// @notice This contract allows to set a constant initial voice credit balance\n/// for MACI's voters.\ncontract ConstantInitialVoiceCreditProxy is InitialVoiceCreditProxy {\n  /// @notice the balance to be returned by getVoiceCredits\n  uint256 internal balance;\n\n  /// @notice creates a new ConstantInitialVoiceCreditProxy\n  /// @param _balance the balance to be returned by getVoiceCredits\n  constructor(uint256 _balance) payable {\n    balance = _balance;\n  }\n\n  /// @notice Returns the constant balance for any new MACI's voter\n  /// @return balance\n  function getVoiceCredits(address, bytes memory) public view override returns (uint256) {\n    return balance;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"subsidy",children:"Subsidy"}),"\n",(0,i.jsxs)(n.p,{children:["It's also possible to use subsidy feature when coordinator deploys polls, proves poll results on-chain and when poll results are verified. This contract is used to verify that the subsidy calculations are correct. It is also used to update the subsidy commitment if the proof is valid. To enable this feature just provide ",(0,i.jsx)(n.code,{children:"--subsidy-enabled"})," or ",(0,i.jsx)(n.code,{children:"-se"})," for ",(0,i.jsx)(n.code,{children:"maci-cli"})," commands (",(0,i.jsx)(n.code,{children:"deployPoll"}),", ",(0,i.jsx)(n.code,{children:"proveOnChain"}),", ",(0,i.jsx)(n.code,{children:"verify"}),")."]}),"\n",(0,i.jsx)(n.h2,{id:"poll-contract",children:"Poll Contract"}),"\n",(0,i.jsx)(n.p,{children:"On the other hand, the Poll contract can be inherited to expose functionality such as top ups and publishing of messages/commands."}),"\n",(0,i.jsxs)(n.p,{children:["For instance, within QFI, the ",(0,i.jsx)(n.code,{children:"publishMessageBatch"})," function call the ",(0,i.jsx)(n.code,{children:"publishMessage"})," function of Poll, as shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'function publishMessageBatch(\n    Message[] calldata _messages,\n    PubKey[] calldata _encPubKeys\n) external {\n    // Check that the two arrays have the same length\n    require(\n        _messages.length == _encPubKeys.length,\n        "GrantRound: _messages and _encPubKeys should be the same length"\n    );\n\n    uint256 batchSize = _messages.length;\n    for (uint8 i = 0; i < batchSize; ++i) {\n        publishMessage(_messages[i], _encPubKeys[i]);\n    }\n\n    emit Voted(msg.sender);\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},720:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var i=t(79);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);